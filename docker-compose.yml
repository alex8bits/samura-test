services:
    nginx:
        image: "nginx:stable-alpine"
        ports:
            - "8000:80"
        restart: unless-stopped
        volumes:
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
            - .:/var/www/laravel
        depends_on:
            - php
        networks:
            - local_network

    php:
        build:
            context: ./docker/dockerfiles
            dockerfile: php.Dockerfile
        restart: unless-stopped
        volumes:
            - .:/var/www/laravel
        user: "1000:1000"
        networks:
            - local_network

    db:
        image: mariadb
        ports:
            - "3300:3306"
        restart: unless-stopped
        env_file:
            - .env
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_ALLOW_EMPTY_PASSWORD: YES
        volumes:
            - db_data:/var/lib/mysql
        networks:
            - local_network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        ports:
            - 8800:80
        depends_on:
            - db
        restart: unless-stopped
        environment:
            PMA_HOST: db
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
            PMA_ARBITRARY: 1
            UPLOAD_LIMIT: 640M
        networks:
            - local_network

    composer:
        build:
            context: ./docker/dockerfiles
            dockerfile: composer.Dockerfile
        volumes:
            - .:/var/www/laravel
        user: "1000:1000"
        networks:
            - local_network

    artisan:
        build:
            context: ./docker/dockerfiles
            dockerfile: php.Dockerfile
        volumes:
            - .:/var/www/laravel
        user: "1000:1000"
        networks:
            - local_network
        entrypoint: ["php", "/var/www/laravel/artisan"]

volumes:
    db_data:
    elastic_data:
    rabbitdata:
    redisdata:

networks:
    local_network:
        driver: bridge
